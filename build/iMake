#!/bin/bash

#  Copyright 2014 - UVSQ, Dassault Aviation
#  Authors list: Loïc Thébault, Eric Petit
#
#  This file is part of Mini-FEM.
#
#  Mini-FEM is free software: you can redistribute it and/or modify it under the terms
#  of the GNU Lesser General Public License as published by the Free Software
#  Foundation, either version 3 of the License, or (at your option) any later version.
#
#  Mini-FEM is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License along with
#  Mini-FEM. If not, see <http://www.gnu.org/licenses/>.

# Libraries path
DATA_PATH="$HOME/Dassault/DC_Data"
DC_PATH="$HOME/Dassault/DC-lib"
DC_BUILD="$DC_PATH/build"
DC_INCLUDE="$DC_PATH/include"
DC_LIBRARIES="$DC_PATH/lib/libDC"
GASPI_PATH="/apps/libs/gpi2/1.1.1"
GASPI_LIBRARIES="$GASPI_PATH/lib64/libGPI2.a"
METIS_PATH="$HOME/Programs/METIS"
METIS_LIBRARIES="$METIS_PATH/lib/libmetis.a"
CILKVIEW_INCLUDE="$HOME/Programs/CilkTools/include/cilktools"

# Case insensitive comparisons
shopt -s nocasematch

# Check the number of arguments
if [[ $# -eq 0 ]]; then
    echo -e "\\033[1;31mPlease specify:"
    echo -e " - The code version (Ref, DC, Hybrid, or Coloring)"
    echo -e " - The distributed memory library (MPI or GASPI)"
    echo -e " - The shared memory runtime (Cilk or OpenMP) \\033[0;39m"
    exit
fi

# Parse the arguments
DISTRI=0
SHARED=0
VERSION=0
ARCHI=0
TREE=0
STATS=0
OPTIMIZED=0
DEBUG=0
VERBOSE=0
MATT=0
PAPI=0
VTUNE=0
CILKVIEW=0

for i in $@; do
	if [[ $i == "clean" ]]; then
	    rm -r CMakeCache.txt CMakeFiles/ cmake_install.cmake Makefile \
              external_files.mod mod_qvddump.mod 2> /dev/null
		echo -e "\\033[1;32mBuild directory has been cleaned up\\033[0;39m"
		exit
	elif [[ $i == "mrproper" ]]; then
	    rm -r CMakeCache.txt CMakeFiles/ cmake_install.cmake Makefile ../bin/* \
              external_files.mod mod_qvddump.mod 2> /dev/null
		echo -e "\\033[1;32mBuild & bin directories have been cleaned up\\033[0;39m"
		exit
    elif [[ $i == "mpi" ]] || [[ $i == "xmpi" ]]; then
        DISTRI="XMPI"
    elif [[ $i == "gaspi" ]]; then
        DISTRI="GASPI"
    elif [[ $i == "cilk" ]]; then
        SHARED="CILK"
    elif [[ $i == "openmp" ]] || [[ $i == "omp" ]]; then
        SHARED="OMP"
	elif [[ $i == "ref" ]]; then
		VERSION="REF"
	elif [[ $i == "coloring" ]]; then
		VERSION="COLORING"
	elif [[ $i == "dc" ]]; then
		VERSION="DC"
	elif [[ $i == "hybrid" ]]; then
        VERSION="DC_HYBRID"
	elif [[ $i == "sse" ]]; then
        ARCHI="SSE"
	elif [[ $i == "avx" ]]; then
	    ARCHI="AVX"
	elif [[ $i == "mic" ]]; then
        ARCHI="MIC"
	elif [[ $i == "tree" ]]; then
		TREE=1
	elif [[ $i == "stat" ]] || [[ $i == "stats" ]]; then
        STATS=1
	elif [[ $i == "optimized" ]] || [[ $i == "opti" ]]; then
		OPTIMIZED=1
	elif [[ $i == "debug" ]] || [[ $i == "dbg" ]]; then
		DEBUG=1
	elif [[ $i == "verbose" ]]; then
		VERBOSE=1
	elif [[ $i == "matt" ]]; then
        MATT=1
        DEBUG=1
	elif [[ $i == "papi" ]]; then
		PAPI=1
	elif [[ $i == "vtune" ]]; then
        VTUNE=1
        DEBUG=1
	elif [[ $i == "cilkview" ]]; then
		CILKVIEW=1
	else
		echo -e "\\033[1;31mOption \"$i\" has been ignored\\033[0;39m"
	fi
done

# Check arguments
if [[ $DISTRI != "xmpi" ]] && [[ $DISTRI != "gaspi" ]]; then
    echo -e "\\033[1;31mPlease specify the distributed memory library (MPI or GASPI) \
             \\033[0;39m"
    exit
fi
if [[ $SHARED != "cilk" ]] && [[ $SHARED != "omp" ]]; then
    echo -e "\\033[1;31mPlease specify the shared memory runtime (Cilk or OpenMP) \
             \\033[0;39m"
    exit
fi
if [[ $VERSION != "ref" ]] && [[ $VERSION != "coloring" ]] &&
   [[ $VERSION != "dc" ]]  && [[ $VERSION != "dc_hybrid" ]]; then
    echo -e "\\033[1;31mPlease specify the code version (Ref, DC, Hybrid, Coloring) \
             \\033[0;39m"
    exit
fi
if [[ $VERSION == "dc_hybrid" ]] && [[ $ARCHI == 0 ]]; then
    echo -e "\\033[1;31mPlease specify the vector length (SSE, AVX, MIC)\\033[0;39m"
    exit
fi
if [ ! -d "$DATA_PATH" ]; then
    echo -e "\\033[1;31mIncorrect path to D&C data\\033[0;39m"
    exit
fi
if [ ! -d "$DC_PATH" ]; then
    echo -e "\\033[1;31mIncorrect path to the D&C library\\033[0;39m"
    exit
fi
if [[ $DISTRI == "gaspi" ]] && [[ ! -d "$GASPI_PATH" ]]; then
    echo -e "\\033[1;31mIncorrect path to the GASPI library\\033[0;39m"
    exit
fi
if [[ $TREE == 1 ]] && [[ ! -d "$METIS_PATH" ]]; then
    echo -e "\\033[1;31mIncorrect path to the METIS library\\033[0;39m"
    exit
fi

# Configure D&C library
DC_ARGUMENTS="$DISTRI $SHARED"
DC_LIBRARIES=$DC_LIBRARIES\_$DISTRI\_$SHARED
if [[ $VERSION == "dc_hybrid" ]]; then
    DC_LIBRARIES=$DC_LIBRARIES\_Hybrid_$ARCHI
    DC_ARGUMENTS="$DC_ARGUMENTS hybrid $ARCHI"
fi
if [[ $ARCHI == "mic" ]]; then
    DC_LIBRARIES=$DC_LIBRARIES\_$ARCHI
    DC_ARGUMENTS="$DC_ARGUMENTS $ARCHI"
fi
if [[ $TREE == 1 ]]; then
    DC_LIBRARIES=$DC_LIBRARIES\_TreeCreation
    DC_ARGUMENTS="$DC_ARGUMENTS tree"
fi
if [[ $STATS == 1 ]]; then
    DC_LIBRARIES=$DC_LIBRARIES\_Stats
    DC_ARGUMENTS="$DC_ARGUMENTS stats"
fi
if [[ $DEBUG == 1 ]]; then
    DC_LIBRARIES=$DC_LIBRARIES\_Debug
    DC_ARGUMENTS="$DC_ARGUMENTS dbg"
fi
if [[ $VERBOSE == 1 ]]; then
    DC_ARGUMENTS="$DC_ARGUMENTS verbose"
fi
DC_LIBRARIES=$DC_LIBRARIES.so

# Compile D&C library
CURRENT_PATH=`pwd`
cd $DC_BUILD
./iMake $DC_ARGUMENTS
cd $CURRENT_PATH

# Cross compile for MIC
if [[ $ARCHI == "mic" ]]; then
    export CC=icc
    export CXX=icpc
    export FC=ifort
    export CFLAGS="-mmic"
    export CXXFLAGS=$CFLAGS
    export FFLAGS=$CFLAGS
    export MPI_C=mpiicc
    export MPI_CXX=mpiicpc

    cmake -DCMAKE_TOOLCHAIN_FILE="./cmake_template.cmake" \
          -DDATA_PATH=$DATA_PATH -DDC_INCLUDE=$DC_INCLUDE \
          -DDC_LIBRARIES=$DC_LIBRARIES -DGASPI_LIBRARIES=$GASPI_LIBRARIES \
          -DMETIS_LIBRARIES=$METIS_LIBRARIES -DCILKVIEW_INCLUDE=$CILKVIEW_INCLUDE \
          -DDISTRI=$DISTRI -DSHARED=$SHARED -DVERSION=$VERSION -DARCHI=$ARCHI \
          -DTREE=$TREE -DOPTIMIZED=$OPTIMIZED -DDEBUG=$DEBUG -DVERBOSE=$VERBOSE \
          -DMATT=$MATT -DPAPI=$PAPI -DVTUNE=$VTUNE -DCILKVIEW=$CILKVIEW \
          . -G "Unix Makefiles"
else
    cmake -DDATA_PATH=$DATA_PATH -DDC_INCLUDE=$DC_INCLUDE \
          -DDC_LIBRARIES=$DC_LIBRARIES -DGASPI_LIBRARIES=$GASPI_LIBRARIES \
          -DMETIS_LIBRARIES=$METIS_LIBRARIES -DCILKVIEW_INCLUDE=$CILKVIEW_INCLUDE \
          -DDISTRI=$DISTRI -DSHARED=$SHARED -DVERSION=$VERSION -DARCHI=$ARCHI \
          -DTREE=$TREE -DOPTIMIZED=$OPTIMIZED -DDEBUG=$DEBUG -DVERBOSE=$VERBOSE \
          -DMATT=$MATT -DPAPI=$PAPI -DVTUNE=$VTUNE -DCILKVIEW=$CILKVIEW \
          . -G "Unix Makefiles"
fi

# Compile
make -j 2
